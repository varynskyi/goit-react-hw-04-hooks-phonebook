{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","components/App.jsx","index.js","components/ContactList/ContactList.module.css","components/Filter/Filter.module.css","components/App.module.css"],"names":["module","exports","ContactForm","submitProp","useState","name","setName","number","setNumber","change","event","currentTarget","value","reset","className","s","container","onSubmit","preventDefault","label","id","input","type","onChange","pattern","title","required","button","ContactList","getContact","deleteContact","map","item","btn","onClick","Filter","htmlFor","uuidv4","App","contacts","setContacts","filter","setFilter","localStorageKeyName","useEffect","parsed","JSON","parse","localStorage","getItem","setItem","stringify","filtered","useMemo","toLower","toLowerCase","contact","includes","newContact","prevState","double","find","length","toast","error","contactId","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.397bb57b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ContactForm_container__31kRl\",\"label\":\"ContactForm_label__3pxMN\",\"input\":\"ContactForm_input__1cLhn\",\"button\":\"ContactForm_button__1qdaK\"};","import { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport s from \"./ContactForm.module.css\";\n\nexport default function ContactForm ({ submitProp }) {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  \n  const change = event => {\n    const { name, value } = event.currentTarget;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const formSubmit = event => {\n    event.preventDefault();\n    submitProp({ name, number });\n    reset();\n  };\n    const reset = () => {\n    setName('');\n    setNumber('');\n  };\n  \n    return (\n      <form className={s.container} onSubmit={formSubmit}>\n        <label className={s.label} id={name}>Name</label>\n        <input\n          className={s.input}\n          type=\"text\"\n          id=\"inputName\"\n          name=\"name\"\n          value={name}\n          onChange={change}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n        />\n        <label className={s.label} id={name}>Number</label>\n        <input\n          className={s.input}\n          id=\"inputNumber\"\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          onChange={change}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n        />\n        <button className={s.button} type=\"submit\">\n          Add contact\n        </button>\n      </form>\n    );\n}\n  \nContactForm.propTypes = {\n  submitProp: PropTypes.func,\n  change: PropTypes.string,\n};\n\n\n\n\n","import PropTypes from \"prop-types\";\nimport s from \"./ContactList.module.css\";\n\nconst ContactList = ({ getContact, deleteContact }) => {\n  return (\n    <div className={s.container}>\n      <ul>\n        {getContact.map(({ id, name, number }) => (\n          <li key={id} className={s.item}>\n            <span>\n              {name}: {number}\n            </span>\n            <button\n              className={s.btn}\n              type=\"submit\"\n              onClick={() => deleteContact(id)}\n            >\n              Delete\n            </button>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nContactList.propTypes = {\n  getContact: PropTypes.array.isRequired,\n  deleteContact: PropTypes.func,\n};\n\nexport default ContactList;\n","import PropTypes from \"prop-types\";\nimport { v4 as uuidv4 } from 'uuid';\nimport s from \"./Filter.module.css\";\n\nconst Filter = ({ value, change }) => {\n  return (\n    <div className={s.container}>\n      <p className={s.label} htmlFor={value.id}>Find contact</p>\n      <input\n        id={uuidv4()}\n        type=\"text\"\n        className={s.input}\n        name=\"filter\"\n        onChange={change}\n        value={value}\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n      />\n    </div>\n  );\n};\n\nFilter.propTypes = {\n  value: PropTypes.string,\n  change: PropTypes.func,\n};\n\nexport default Filter;\n","import { v4 as uuidv4 } from 'uuid';\nimport { useState, useEffect, useMemo } from \"react\";\nimport ContactForm from \"./ContactForm/ContactForm\";\nimport ContactList from \"./ContactList/ContactList\";\nimport Filter from \"./Filter/Filter\";\nimport s from \"./App.module.css\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\nconst App = () => {\n  const [contacts, setContacts] = useState([\n      { id: \"id-1\", name: \"Denzel Hayes Washington Jr\", number: \"459-12-56\" },\n      { id: \"id-2\", name: \"Julia Roberts\", number: \"443-89-12\" },\n      { id: \"id-3\", name: \"Jennifer Aniston\", number: \"645-17-79\" },\n      { id: \"id-4\", name: \"Robert De Niro\", number: \"227-91-26\" },\n  ]);\n\n  const [filter, setFilter] = useState('');\n  const localStorageKeyName = 'contacts';\n\n  useEffect(() => {\n    const parsed = JSON.parse(\n      localStorage.getItem(localStorageKeyName),\n    );\n    setContacts(parsed);\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem(localStorageKeyName, JSON.stringify(contacts));\n  }, [contacts]);\n\n  const change = event => {\n    setFilter(event.currentTarget.value);\n  };\n\n  const formSubmit = ({ name, number }) => {\n    const newContact = {\n      name,\n      number,\n      id: uuidv4(),\n    };\n\n    setContacts(prevState => {\n      const double = prevState.find(contact =>\n        contact.name.toLowerCase().includes(name.toLowerCase()),\n      );\n\n      if (double && double.name.length === name.length) {\n        toast.error(`${name} is already in contacts`);\n        return [...prevState];\n      } else {\n        setContacts([newContact, ...prevState]);\n      }\n    });\n  };\n  \n  const deleteContact = (contactId) => {\n    setContacts(prevState =>\n      prevState.filter(contact => contact.id !== contactId),\n    );\n  };\n  \n  const filtered = useMemo(() => {\n    const toLower = filter.toLowerCase();\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(toLower),\n    );\n  }, [filter, contacts]);\n\n    return (\n      <div className={s.container}>\n        <h1 className={s.title}>Phonebook</h1>\n        <ContactForm submitProp={formSubmit} />\n        <h2 className={s.title}>Contacts</h2>\n        <Filter change={change} value={filter} />\n        <ContactList\n          getContact={filtered}\n          deleteContact={deleteContact}\n        />\n        <ToastContainer />\n      </div>\n    );\n  }\n\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ContactList_container__2YV_D\",\"item\":\"ContactList_item__2qmVc\",\"btn\":\"ContactList_btn__1w5Sa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Filter_container__3Vo8Y\",\"label\":\"Filter_label__2vciv\",\"input\":\"Filter_input__3Dx9D\",\"btn\":\"Filter_btn__1Yp9m\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__PAAzK\",\"title\":\"App_title__5i3-G\"};"],"sourceRoot":""}